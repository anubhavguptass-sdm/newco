@if $include-bp-toaster {
  // basic setup for toaster handle
  .reference-bp-toaster-handle {
    width: 100%;
    flex: 0 0 auto;
  }

  // toaster container
  .bp-toaster {
    position: fixed;
    border: $toaster-border;
    @include animate(
      top left,
      0s,
      250ms,
      false,
      cubic-bezier(0.34, 1.56, 0.64, 1)
    );
    max-height: calc(100vh - #{$toaster-top-offset-mobile});
    @media (min-width: $breakpoint-sm-min) {
      max-height: calc(100vh - #{$toaster-top-offset-desktop});
    }
    height: 100%;
    width: 100%;
    background-color: $toaster-background;
    bottom: 0;
    left: auto;
    right: 0;
    top: auto;
    z-index: 110;
    opacity: 0;
    pointer-events: all;
    overflow: hidden;
    border-top-left-radius: $toaster-border-radius-top-left;
    border-top-right-radius: $toaster-border-radius-top-right;
    border-bottom-right-radius: $toaster-border-radius-bottom-right;
    border-bottom-left-radius: $toaster-border-radius-bottom-left;

    &.disabled {
      display: none !important;
    }
    // mouseover animation should be simple as ease
    &.mouseover {
      @include animate(top left, 0s, 250ms, false, ease);
    }

    &.initiated {
      opacity: 1;
      pointer-events: all;
    }

    > *,
    > * > * {
      height: 100%;
    }

    &.scrollable {
      .bp-toaster-content {
        overflow: auto;
      }
    }

    &.y {
      &-top {
        top: 0;
        bottom: auto;
        z-index: 999999999;

        .reference-bp-toaster-handle {
          order: 2;
        }
        .bp-toaster-content {
          order: 1;
        }

        .bp-toaster-handle-icon {
          .openicon {
            display: none;
          }
          .closeicon {
            display: block;
          }
        }

        &.opened {
          transform: translateY(0);

          .bp-toaster-handle-icon {
            .openicon {
              display: block;
            }
            .closeicon {
              display: none;
            }
          }
        }
      }
      &-bottom {
        bottom: 0;
        top: auto;
      }
    }

    &.x {
      &-left {
        left: 0;
        right: auto;

        &.within-content {
          margin-left: calc((100vw - var(--max-content-md-width)) / 2);
          @media (min-width: $breakpoint-sm-min) {
            margin-left: calc((100vw - var(--max-content-width)) / 2);
          }
          @media (max-width: $breakpoint-md-max) {
            margin-left: 0;
          }
          margin-right: auto;
        }
      }

      &-center {
        left: auto;
        right: auto;
        margin: auto;
      }

      &-right {
        right: 0;
        left: auto;

        &.within-content {
          margin-right: calc((100vw - var(--max-content-md-width)) / 2);
          @media (min-width: $breakpoint-sm-min) {
            margin-right: calc((100vw - var(--max-content-width)) / 2);
          }
          @media (max-width: $breakpoint-md-max) {
            margin-right: 0;
          }
          margin-left: auto;
        }
      }
    }

    > * > .content {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    &.opened {
      transform: translateY(0);

      .bp-toaster-handle-icon {
        .openicon {
          display: none;
        }
        .closeicon {
          display: block;
        }
      }
    }

    &-handle {
      display: flex;
      cursor: pointer;
      flex-direction: row;
      justify-content: space-between;
      border-bottom: $toaster-handle-border;
      background-color: $toaster-handle-background;
      min-height: $toaster-handle-height;
      align-content: center;
      align-items: center;
      margin: 0;
      border-top-left-radius: $toaster-handle-border-radius-top-left;
      border-top-right-radius: $toaster-handle-border-radius-top-right;
      border-bottom-right-radius: $toaster-handle-border-radius-bottom-right;
      border-bottom-left-radius: $toaster-handle-border-radius-bottom-left;

      * {
        margin: auto;
      }

      &-icon {
        flex: 0 0 calc(#{$toaster-icon-size} + 2rem);
        @include animate(center, 0s, 250ms, false, ease, transform);

        img {
          width: $toaster-icon-size;
          height: $toaster-icon-size;
        }

        .openicon {
          display: block;
        }
        .closeicon {
          display: none;
        }
      }

      &-label {
        flex: 1;
        padding: $toaster-label-padding;

        * {
          color: $toaster-handle-text-color;
          font-size: $toaster-handle-font-size;
          font-family: $toaster-handle-font-family;
          line-height: $toaster-handle-line-height;
        }
      }
    }

    &-content {
      flex: 1;
      background-color: $toaster-content-background;
      width: 100%;
      max-width: 100%;
    }
  }
}
